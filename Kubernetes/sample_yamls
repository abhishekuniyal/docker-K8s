*************************deployment.yaml*************************************
apiVersion: apps/v1
kind: Deployment
metadata:
   labels:
      app: ngnix
spec:
   strategy: rolling-update
   relpicas:1
   selector: 
      matchLabels:
         app: ngnix
   template:
      metadata:
         labels:
            app: ngnix
      spec:
         containers:
         -name: ngnix
          image: ngnix:1.16
          ports:
          -containerPort: 8080
          env:
          -name: MONGO_INIT_ROOT_USERNAME
           valueFrom:
              secretKeyRef:
                 name: mongo-secret
                 key: mongo-username
	 -name: MONGO_DB_URL
           valueFrom:
              configMapKeyRef:
                 name: mongodb-configmap
                 key: database_url

******************Service.yaml************************************************

apiVersion: v1
kind: service
metadata: 
   label:
      app: ngnix
spec:
   selector:
      app: ngnix
   type: LoadBalancer
   ports:
      -protocol: TCP
       port:80
       targetPort: 8080
       nodePort: 30000
      
****************Secrets*****************************************************
apiVersion: v1
kind: Secret
metadata:
   name: mongo-secret
type: Opaque
data:
   mongo-username: admin (better use echo -n 'admin' |base64 => a&f)C and use this base64 value)
   mongo-password: admin
   
***************Config Maps*************************************************

apiVersion: v1
kind: ConfigMap
metadata:
   name: mongodb-configmap
   namespace: my-namespace
data:
   database_url: mongodb-service

********************************INgress without TLS******************************
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
   name: dashboard-ingress
   namespace: my-namespace
spec:
   rules:
   - host: dashboard.com
     http:
        paths:
        - backend:
             serviceName: my-service
             serviceport: 80

********************************START: INgress TLS******************************
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
   name: dashboard-ingress
   namespace: my-namespace
spec:
   tls:
   - host:
     - dashboard.com
     secretName: myapp-secret-tls
   rules:
   - host: dashboard.com
     http:
        paths:
        - backend:
             serviceName: my-service
             serviceport: 80

---
apiVersion: v1
kind: Secret
metadata:
   name: myapp-secret-tls
   namespace: default
type: kubernetes.io/tls
data:
   tls.cert: <base64 encoded cert value>
   tls.key:  <base64 encoded key value>

********************************END: INgress TLS******************************


**************************Type of Probes***************
  - Readiness probe -- if pod is read for serving the data			--pod
  - Liveness probe  --if container is good (no deadlock in app) 		--container
  - Startup probe -- If application(e.g springboot app) is fine			--application
  could be http check or file/ssh check
  under the deployment spec.container
 	 readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10

          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10

          startupProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 30
            periodSeconds: 10
